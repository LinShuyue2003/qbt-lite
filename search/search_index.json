{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"QBT-Lite Documentation \ud83d\udcda","text":"<p>Welcome to the documentation of QBT-Lite, a lightweight quantitative backtesting framework.</p>"},{"location":"#overview","title":"\ud83d\ude80 Overview","text":"<p>QBT-Lite covers the workflow: data import \u2192 strategy execution \u2192 order simulation \u2192 performance evaluation \u2192 reporting \u2192 visualization.</p>"},{"location":"#documentation","title":"\ud83d\udcd1 Documentation","text":"<ul> <li>Installation</li> <li>Usage Guide</li> <li>Architecture</li> <li>Strategies</li> <li>Data Sources</li> <li>Reporting &amp; Metrics</li> <li>CLI Reference</li> <li>Streamlit Dashboard</li> <li>Roadmap</li> <li>FAQ</li> </ul> <p>For learning and demonstration purposes only. Not financial advice.</p>"},{"location":"architecture/","title":"Architecture \ud83c\udfd7\ufe0f","text":"<p>QBT-Lite provides two engines and a modular set of components.</p> <pre><code>Data \u2192 Strategy \u2192 Engine \u2192 Broker \u2192 Portfolio \u2192 Metrics \u2192 Report \u2192 Visualization\n</code></pre>"},{"location":"architecture/#engines","title":"Engines","text":"<ul> <li>Vectorized Engines: <code>qbt/core/engine.py</code> (single-asset), <code>qbt/core/engine_multi.py</code> (multi-asset)</li> <li>Event-Driven Engine: <code>qbt/core/event_engine.py</code> (intraday with events)</li> </ul>"},{"location":"architecture/#events-from-event_enginepy","title":"Events (from <code>event_engine.py</code>)","text":"<ul> <li><code>MarketEvent(timestamp: pd.Timestamp, bar: pd.Series, symbol: str)</code></li> <li><code>FillEvent(timestamp: pd.Timestamp, symbol: str, side: str, qty: int, price: float, fee: float)</code></li> </ul>"},{"location":"architecture/#broker","title":"Broker","text":"<ul> <li><code>qbt/core/broker.py</code>: <code>transact(order)</code> applies <code>commission()</code> and slippage.</li> </ul>"},{"location":"architecture/#portfolio","title":"Portfolio","text":"<ul> <li><code>on_fill(fill)</code>, <code>mark_to_market(last_prices)</code>, <code>equity_series()</code>.</li> </ul>"},{"location":"architecture/#metrics","title":"Metrics","text":"<ul> <li><code>performance_from_nav</code>, <code>compute_drawdown</code> (core)</li> <li><code>trade_stats_from_fills</code> (analytics)</li> </ul>"},{"location":"architecture/#reports","title":"Reports","text":"<ul> <li><code>qbt/report/report.py</code> writes CSV/MD and saves <code>equity.png</code> &amp; <code>drawdown.png</code>.</li> </ul>"},{"location":"architecture/#cli","title":"CLI","text":"<ul> <li><code>qbt/cli.py</code> exposes the backtester to the command line with common options.</li> </ul>"},{"location":"cli/","title":"CLI Reference \ud83d\udcbb","text":"<p>Run from repository root after installation.</p>"},{"location":"cli/#examples","title":"Examples","text":"<pre><code>qbt-lite --strategy momentum --symbol MOCK --lookback 60 --report_name cli_mom\npython -m qbt.cli --strategy topn_momentum --config examples/configs/multi_momentum.yml --report_name demo_multi\n</code></pre>"},{"location":"cli/#options","title":"Options","text":"<ul> <li><code>--strategy</code> {sma|momentum|topn_momentum|bbands|rsi|macd} (default: sma)</li> <li><code>--config</code> YAML config file</li> <li><code>--symbol</code> ticker symbol (default: MOCK)</li> <li><code>--data_csv</code> path to CSV data</li> <li><code>--lookback</code> indicator lookback (default: 60)</li> <li><code>--short</code> fast MA for SMA (default: 10)</li> <li><code>--long</code> slow MA for SMA (default: 30)</li> <li><code>--top_n</code> for Top-N momentum (default: 2)</li> <li><code>--commission_bps</code> commission bps (default: 0.0005)</li> <li><code>--slippage</code> price impact (default: 0.01)</li> <li><code>--unit</code> order size (default: 1000)</li> <li><code>--report_name</code> output prefix (default: cli_run)</li> </ul>"},{"location":"data/","title":"Data Sources \ud83d\udce1","text":""},{"location":"data/#csv-format","title":"CSV Format","text":"<p>Columns required: <pre><code>datetime, open, high, low, close, volume[, symbol]\n</code></pre> - <code>datetime</code> will be parsed to <code>pd.Timestamp</code> - Optional <code>symbol</code> supports multi-asset files</p>"},{"location":"data/#yfinance-example","title":"yfinance Example","text":"<pre><code>import yfinance as yf, pandas as pd\ndf = yf.download(\"AAPL\", start=\"2018-01-01\", progress=False)\ndf = df.rename(columns={\n    \"Open\":\"open\",\"High\":\"high\",\"Low\":\"low\",\"Close\":\"close\",\"Volume\":\"volume\"\n}).reset_index().rename(columns={\"Date\":\"datetime\"})\ndf.to_csv(\"examples/data_sample/AAPL.csv\", index=False)\n</code></pre>"},{"location":"data/#notes","title":"Notes","text":"<ul> <li>Ensure timezone consistency for intraday/event-driven runs.</li> <li>Commission &amp; slippage are configurable via CLI or config.</li> </ul>"},{"location":"faq/","title":"FAQ \u2753","text":"<p>MkDocs 404 for Usage? - Ensure the file name matches the nav entry exactly (case-sensitive on GitHub Pages). - Put Markdown files in the <code>docs/</code> folder and set <code>nav</code> in <code>mkdocs.yml</code> accordingly.</p> <p>Windows cannot run <code>mkdocs</code> command? - Install with <code>pip install mkdocs mkdocs-material</code> or run <code>python -m mkdocs serve</code>.</p> <p>No reports generated? - Check <code>reports/</code> directory exists and <code>--report_name</code> is set. - Ensure CSV columns match the required schema.</p> <p>Strategy not recognized in CLI? - Valid choices are <code>sma</code>, <code>momentum</code>, <code>topn_momentum</code>, <code>bbands</code>, <code>rsi</code>, <code>macd</code>.</p>"},{"location":"installation/","title":"Installation \u2699\ufe0f","text":""},{"location":"installation/#requirements","title":"Requirements","text":"<ul> <li>Python 3.10+</li> <li>Dependencies: pandas, numpy, matplotlib, pytest, streamlit, tabulate, plotly, yfinance, tushare (optional)</li> </ul>"},{"location":"installation/#install-from-source","title":"Install from source","text":"<pre><code>git clone https://github.com/LinShuyue2003/qbt-lite.git\ncd qbt-lite\n\npython -m venv .venv\nsource .venv/bin/activate   # Linux / Mac\n.\\.venv\\Scripts\\Activate.ps1   # Windows\n\npip install -U pip\npip install -e .\npip install 'qbt-lite'\n</code></pre> <p>Optional features: <pre><code>pip install 'qbt-lite'  # streamlit, plotly, yfinance, pytest, pyyaml\n</code></pre></p>"},{"location":"installation/#quick-verification","title":"Quick verification","text":"<pre><code>python -m examples.run_sma_example\n</code></pre>"},{"location":"reporting/","title":"Reporting &amp; Metrics \ud83d\udcca","text":"<p>Outputs are written to <code>reports/</code> with a <code>report_name</code> prefix.</p>"},{"location":"reporting/#files","title":"Files","text":"<ul> <li><code>*_metrics.csv</code> \u2014 machine-readable metrics</li> <li><code>*_metrics.md</code> \u2014 human-readable summary</li> <li><code>*_equity.png</code> \u2014 equity curve</li> <li><code>*_drawdown.png</code> \u2014 drawdown chart</li> </ul>"},{"location":"reporting/#core-metrics-qbtcoremetricspy","title":"Core Metrics (<code>qbt/core/metrics.py</code>)","text":"<ul> <li>Annualized Return, Volatility</li> <li>Sharpe Ratio</li> <li>Drawdown series &amp; Max Drawdown (<code>compute_drawdown</code>)</li> </ul>"},{"location":"reporting/#trade-metrics-qbtanalyticsmetrics_extpy","title":"Trade Metrics (<code>qbt/analytics/metrics_ext.py</code>)","text":"<ul> <li><code>trade_stats_from_fills(fills_df)</code> returns:</li> <li><code>num_trades</code>, <code>win_rate</code>, <code>profit_factor</code></li> <li><code>avg_win</code>, <code>avg_loss</code>, <code>max_win</code>, <code>max_loss</code></li> </ul>"},{"location":"roadmap/","title":"Roadmap \ud83d\udd2e","text":"<ul> <li>Add pairs trading, factor models, CTA futures</li> <li>Allocation methods: Kelly, risk parity, volatility targeting</li> <li>Live data connectors: tushare, Alpaca, ccxt</li> <li>Web app with parameter sweeps and results database</li> <li>Order types: stop/limit, latency modeling</li> <li>CI: expand pytest coverage, property-based tests</li> </ul>"},{"location":"strategies/","title":"Strategies \ud83d\udcc8","text":"<p>This section summarizes built-in strategies. See the module docstrings for details.</p>"},{"location":"strategies/#sma-crossover-sma_crosspy","title":"SMA Crossover (<code>sma_cross.py</code>)","text":"<ul> <li>Parameters: <code>short</code> (default 10), <code>long</code> (default 30)</li> <li>Signal: long when fast MA &gt; slow MA; flat otherwise.</li> </ul>"},{"location":"strategies/#momentum-momentumpy","title":"Momentum (<code>momentum.py</code>)","text":"<ul> <li>Parameter: <code>lookback</code> (default 60). Uses past return to compute momentum.</li> </ul>"},{"location":"strategies/#top-n-momentum-topn_momentumpy","title":"Top-N Momentum (<code>topn_momentum.py</code>)","text":"<ul> <li>Parameters: <code>lookback</code>, <code>top_n</code> (default 2). Ranks assets and allocates to top performers.</li> </ul>"},{"location":"strategies/#bollinger-bands-ta_bbandspy","title":"Bollinger Bands (<code>ta_bbands.py</code>)","text":"<ul> <li>Typical parameters: window, number of stds.</li> <li>Long near lower band; reduce/exit near upper band.</li> </ul>"},{"location":"strategies/#rsi-ta_rsipy","title":"RSI (<code>ta_rsi.py</code>)","text":"<ul> <li>Typical parameter: period (e.g., 14). Mean-reversion behavior near overbought/oversold zones.</li> </ul>"},{"location":"strategies/#macd-ta_macdpy","title":"MACD (<code>ta_macd.py</code>)","text":"<ul> <li>EMAs and signal line; long when MACD crosses above signal.</li> </ul>"},{"location":"streamlit/","title":"Streamlit Dashboard \ud83d\udda5\ufe0f","text":"<p>Interactive experimentation UI.</p>"},{"location":"streamlit/#run","title":"Run","text":"<pre><code>python -m streamlit run streamlit_app.py\n</code></pre>"},{"location":"streamlit/#features","title":"Features","text":"<ul> <li>Upload CSV (<code>datetime, open, high, low, close, volume</code>)</li> <li>Choose strategy: SMA, Momentum, RSI, MACD, Bollinger</li> <li>Tune parameters via sliders</li> <li>See equity curve live</li> <li>Export full reports to <code>reports/</code></li> </ul>"},{"location":"usage/","title":"Usage Guide \ud83d\udcd8","text":"<p>This guide explains how to run QBT-Lite using examples, the CLI, and the event-driven engine.</p>"},{"location":"usage/#quick-start","title":"Quick Start","text":"<pre><code>python -m examples.run_sma_example\nqbt-lite --strategy momentum --symbol MOCK --lookback 60 --report_name cli_mom\npython -m examples.run_event_driven_demo\n</code></pre>"},{"location":"usage/#cli-reference-from-qbtclipy","title":"CLI Reference (from <code>qbt/cli.py</code>)","text":"<p>The CLI accepts the following options:</p> <ul> <li><code>--strategy</code> (default: <code>sma</code>) \u2014 choices: <code>sma</code>, <code>momentum</code>, <code>topn_momentum</code>, <code>bbands</code>, <code>rsi</code>, <code>macd</code></li> <li><code>--config</code> (default: <code>None</code>) \u2014 YAML config file path</li> <li><code>--symbol</code> (default: <code>MOCK</code>) \u2014 single ticker symbol</li> <li><code>--data_csv</code> (default: <code>None</code>) \u2014 path to CSV; if omitted, uses mock data / examples</li> <li><code>--lookback</code> (default: <code>60</code>) \u2014 lookback window for momentum/indicators</li> <li><code>--short</code> (default: <code>10</code>) \u2014 short MA window for SMA</li> <li><code>--long</code> (default: <code>30</code>) \u2014 long MA window for SMA</li> <li><code>--top_n</code> (default: <code>2</code>) \u2014 top N assets for <code>topn_momentum</code></li> <li><code>--commission_bps</code> (default: <code>0.0005</code>) \u2014 commission in bps</li> <li><code>--slippage</code> (default: <code>0.01</code>) \u2014 slippage (price impact)</li> <li><code>--unit</code> (default: <code>1000</code>) \u2014 order unit size (shares/contracts)</li> <li><code>--report_name</code> (default: <code>cli_run</code>) \u2014 prefix for report files</li> </ul> <p>Examples: <pre><code>qbt-lite --strategy sma --symbol MOCK --short 10 --long 30 --report_name sma10x30\npython -m qbt.cli --strategy topn_momentum --config examples/configs/multi_momentum.yml --report_name demo_multi\n</code></pre></p>"},{"location":"usage/#data-format-from-qbtdataloaderpy","title":"Data Format (from <code>qbt/data/loader.py</code>)","text":"<p>CSV columns expected: <pre><code>datetime, open, high, low, close, volume[, symbol]\n</code></pre> - <code>datetime</code> must be parseable to timestamp - Optional <code>symbol</code> column supports multi-asset inputs</p>"},{"location":"usage/#daily-vectorized-backtests","title":"Daily Vectorized Backtests","text":""},{"location":"usage/#single-asset-momentum","title":"Single-Asset Momentum","text":"<pre><code>python -m examples.run_momentum_example\n</code></pre>"},{"location":"usage/#multi-asset-top-n-momentum","title":"Multi-Asset Top-N Momentum","text":"<pre><code>python -m qbt.cli --strategy topn_momentum --config examples/configs/multi_momentum.yml --report_name demo_multi\n</code></pre>"},{"location":"usage/#event-driven-backtests","title":"Event-Driven Backtests","text":"<p>Run the intraday demo: <pre><code>python -m examples.run_event_driven_demo\n</code></pre> Event types: <code>MarketEvent(timestamp, bar, symbol)</code>, <code>FillEvent(timestamp, symbol, side, qty, price, fee)</code> Core flow: Market \u2192 Strategy \u2192 Order \u2192 Broker \u2192 Portfolio Broker: <code>transact()</code> applies fees via <code>commission()</code> and slippage. Portfolio: handles <code>on_fill()</code>, <code>mark_to_market()</code>, and outputs <code>equity_series()</code> plus <code>fills_dataframe()</code>.</p> <p>Trade stats: <code>qbt.analytics.metrics_ext.trade_stats_from_fills(fills_df)</code></p> <p>Outputs saved to <code>reports/</code>: - <code>qbt-lite-0.3.0/reports/*_metrics.csv</code> / <code>*_metrics.md</code> - <code>qbt-lite-0.3.0/reports/*_equity.png</code> / <code>*_drawdown.png</code></p>"},{"location":"usage/#performance-metrics","title":"Performance Metrics","text":"<p>From <code>qbt/core/metrics.py</code>: - <code>compute_drawdown(nav)</code> \u2014 drawdown series and max drawdown - <code>performance_from_nav(nav)</code> \u2014 annualized return/volatility, Sharpe, etc.</p> <p>From <code>qbt/analytics/metrics_ext.py</code>: - <code>trade_stats_from_fills(fills_df)</code> \u2014 trade-level metrics: win rate, profit factor, avg win/loss, etc.</p>"},{"location":"usage/#strategies-detected-in-qbtstrategies","title":"Strategies (detected in <code>qbt/strategies/</code>)","text":"<p>Available modules: momentum, sma_cross, ta_bbands, ta_macd, ta_rsi, topn_momentum - <code>sma_cross.py</code> \u2014 moving-average crossover (<code>--short</code>, <code>--long</code>) - <code>momentum.py</code> \u2014 momentum with <code>--lookback</code> - <code>topn_momentum.py</code> \u2014 multi-asset ranking with <code>--top_n</code> - <code>ta_bbands.py</code>, <code>ta_rsi.py</code>, <code>ta_macd.py</code> \u2014 Bollinger Bands, RSI, MACD</p>"}]}